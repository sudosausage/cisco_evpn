{% set device = hostvars[inventory_hostname] %}

#Interface Section

{% for ifd, interface in device.interfaces.items() %}
interface {{ ifd }}
{% if interface.vrf is defined %}
  vrf member {{ interface.vrf }}
{% endif %}
{% if interface.type is defined and 'routed' in interface.type %}
  no switchport
  ip address {{ interface.ipv4_addr }}/{{ interface.ipv4_mask }}
  ip router ospf 1 area 0.0.0.0
  mtu 9216
{% endif %}
{% if interface.type is defined and 'routed' in interface.type %}
  no switchport
  ip address {{ interface.ipv4_addr }}/{{ interface.ipv4_mask }}
  ip router ospf 1 area 0.0.0.0
  ip router ospf 1 passive-interface
{% endif %}
{% if interface.type is defined and 'vlan' in interface.type %}
  ip address {{ interface.ipv4_addr }}/{{ interface.ipv4_mask }}
  fabric forwarding mode anycast-gateway
  no ip redirects
{% endif %}
  description {{ interface.description }}
  no shutdown
!
{% endfor %}

{% for vlan in device.vlan.items() %}
vlan {{ vlan.id }}
  name shared_infra
  vn-segment {{ vlan.vni }}
{% endfor %}
#Routing Section

{% for name, vrf in device.vrf.items() %}
vrf context {{ name }}
  vni {{ vrf.vni }}
  rd {{ asn }}:{{ vrf.rd }}
  address-family ipv4 unicast
    route-target import {{ asn }}:{{ vrf.rd }}
    route-target export {{ asn }}:{{ vrf.rd }}
!
{% endfor %}
router ospf 1
  router-id {{ device.rid }}
!
router bgp {{ device.asn }}
  router-id {{ device.rid }}
  address-family ipv4 unicast
  address-family l2vpn evpn
    advertise-pip
{% for bgp in device.bgp.items() %}
  neighbor {{ bgp.neighbor_ip }}
    remote-as {{ bgp.remote_asn }}
    description {{ bgp.description }}
    update-source loopback0
    address-family l2vpn evpn
      send-community
      send-community extended
{% endfor %}
{% for name, vrf in device.vrf.items() %}
  vrf {{ name }}
    address-family ipv4 unicast
      network {{ vrf.networks }}
      advertise l2vpn evpn
{% endfor %}

#EVPN Specific

fabric forwarding anycast-gateway-mac 0000.0002.0003
interface nve1
  no shutdown
  host-reachability protocol bgp
  advertise virtual-rmac
  source-interface loopback1
{% for vrf in device.vrf.items() %}
  member vni {{ vrf.vni }} associate-vrf
{% endfor %}
{% for vlan in device.vlan.items() %}
  member vni {{ vlan.vlan_vni }}
    suppress-arp
    ingress-replication protocol bgp
{% endfor %}